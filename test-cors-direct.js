#!/usr/bin/env node

/**
 * Teste Direto de CORS para API de Produ√ß√£o
 * Testa a prote√ß√£o CORS diretamente
 */

const API_URL = 'https://fhdautomacaoindustrialapp.vercel.app/api'

async function testCORS() {
  console.log('üîí Testando Prote√ß√£o CORS da API de Produ√ß√£o\n')
  console.log(`üåê API URL: ${API_URL}\n`)

  // Teste 1: Tentativa de acesso com origem maliciosa
  console.log('üö´ Teste 1: Tentativa de acesso com origem maliciosa')
  try {
    const response = await fetch(`${API_URL}/seo-settings`, {
      headers: {
        'Origin': 'https://malicious-site.com',
        'Content-Type': 'application/json'
      }
    })

    console.log(`Status: ${response.status}`)
    console.log(`Headers: ${JSON.stringify(Object.fromEntries(response.headers.entries()), null, 2)}`)

    if (response.status === 403 || response.status === 401) {
      console.log('‚úÖ Origem maliciosa BLOQUEADA corretamente')
    } else if (response.status === 200) {
      console.log('‚ùå Origem maliciosa N√ÉO foi bloqueada!')
    } else {
      console.log(`‚ö†Ô∏è Status inesperado: ${response.status}`)
    }
  } catch (error) {
    if (error.message.includes('CORS') || error.message.includes('blocked')) {
      console.log('‚úÖ Origem maliciosa BLOQUEADA por CORS')
    } else {
      console.log(`‚ùå Erro: ${error.message}`)
    }
  }
  console.log('')

  // Teste 2: Acesso com origem permitida
  console.log('‚úÖ Teste 2: Acesso com origem permitida')
  try {
    const response = await fetch(`${API_URL}/seo-settings`, {
      headers: {
        'Origin': 'https://fhdautomacaoindustrialapp.vercel.app',
        'Content-Type': 'application/json'
      }
    })

    console.log(`Status: ${response.status}`)
    console.log(`Headers: ${JSON.stringify(Object.fromEntries(response.headers.entries()), null, 2)}`)

    if (response.ok) {
      console.log('‚úÖ Origem permitida - ACESSO AUTORIZADO')
    } else {
      console.log(`‚ö†Ô∏è Origem permitida - Status: ${response.status}`)
    }
  } catch (error) {
    console.log(`‚ùå Erro com origem permitida: ${error.message}`)
  }
  console.log('')

  // Teste 3: Tentativa de acesso admin sem autentica√ß√£o
  console.log('üîê Teste 3: Tentativa de acesso admin sem autentica√ß√£o')
  try {
    const response = await fetch(`${API_URL}/seo-settings`, {
      method: 'POST',
      headers: {
        'Origin': 'https://fhdautomacaoindustrialapp.vercel.app',
        'Content-Type': 'application/json',
        'X-Admin-Request': 'true' // Simula requisi√ß√£o admin
      },
      body: JSON.stringify({
        page_name: 'test-page',
        title: 'Test Page'
      })
    })

    console.log(`Status: ${response.status}`)
    console.log(`Headers: ${JSON.stringify(Object.fromEntries(response.headers.entries()), null, 2)}`)

    if (response.status === 401) {
      console.log('‚úÖ Acesso admin sem autentica√ß√£o - BLOQUEADO corretamente')
    } else {
      console.log(`‚ö†Ô∏è Acesso admin sem autentica√ß√£o - Status: ${response.status}`)
    }
  } catch (error) {
    console.log(`‚ùå Erro no teste admin: ${error.message}`)
  }
  console.log('')

  console.log('üéâ Testes de CORS conclu√≠dos!')
}

// Executar testes
testCORS().catch(console.error)
